---
- hosts: localhost
  gather_facts: false
  collections:
    - netapp.ontap
  vars:
    svm_src: "svm-dr"
    svm_clone: "svm-clone"
    login: &login
      hostname: "10.xx.xx.xx"
      username: "admin"
      password: "password"
      https: yes
      validate_certs: no
  tasks:
  - name: Get volume list
    na_ontap_info:
      state: info
      <<: *login
      gather_subset:
        - volume_info
    register: ontap_volume_info
  - debug:
      msg: "{{ ontap_volume_info.ontap_info }}"

  - debug: msg="ssh {{ login.username }}@{{ login.hostname }} vol clone create -vserver {{ svm_clone }} -flexclone {{ item.value.volume_id_attributes.name }} -type RW -parent-vserver {{ svm_src }} -parent-volume {{ item.value.volume_id_attributes.name }} -parent-snapshot hourly.0 -junction-path /{{ item.value.volume_id_attributes.name }}"
    with_dict: "{{ ontap_volume_info.ontap_info.volume_info }}"
    when: item.value.volume_id_attributes.owning_vserver_name == svm_src

  - name: Clone Volume from "{{ svm_src }}" to "{{ svm_clone }}"
    na_ontap_command:
      <<: *login
      command: ['vol', 'clone', 'create -vserver {{ svm_clone }} -flexclone {{ item.value.volume_id_attributes.name }} -type RW -parent-vserver {{ svm_src }} -parent-volume {{ item.value.volume_id_attributes.name }} -parent-snapshot hourly.0 -junction-path /{{ item.value.volume_id_attributes.name }}']
      privilege: 'admin'
      return_dict: true

    with_dict: "{{ ontap_volume_info.ontap_info.volume_info }}"
    when: item.value.volume_id_attributes.owning_vserver_name == svm_src

  # - name: Clone Volume from {{ svm_src }} to {{ svm_clone }}
  #   na_ontap_volume_clone:
  #     state: present
  #     <<: *login
  #     vserver: "{{ svm_clone }}"
  #     parent_vserver: "{{ svm_src }}"
  #     parent_volume: "{{ item.value.volume_id_attributes.name }}"
  #     parent_snapshot: "hourly.0"
  #     name: "{{ item.value.volume_id_attributes.name }}"
  #     space_reserve: none
  #     junction_path: "/{{ item.value.volume_id_attributes.name }}"
  #   with_dict: "{{ ontap_volume_info.ontap_info.volume_info }}"
  #   when: item.value.volume_id_attributes.owning_vserver_name == svm_src
#  - debug: msg="Key={{ item.key }} value={{ item.value.volume_id_attributes.name }}"
